// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "Data Table": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/arisgk/goa-api-data-table/design
// --out=$(GOPATH)/src/github.com/arisgk/goa-api-data-table
// --version=v1.3.1

package app

import (
	"github.com/goadesign/goa"
)

// A user (default view)
//
// Identifier: application/data.table.user; view=default
type DataTableUser struct {
	// Age
	Age *int `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
	// First Name
	FirstName string `form:"firstName" json:"firstName" xml:"firstName"`
	// User unique identifier
	ID string `form:"id" json:"id" xml:"id"`
	// Last Name
	LastName string `form:"lastName" json:"lastName" xml:"lastName"`
}

// Validate validates the DataTableUser media type instance.
func (mt *DataTableUser) Validate() (err error) {
	if mt.ID == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "id"))
	}
	if mt.FirstName == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "firstName"))
	}
	if mt.LastName == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "lastName"))
	}
	if mt.Age != nil {
		if *mt.Age < 18 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *mt.Age, 18, true))
		}
	}
	if mt.Age != nil {
		if *mt.Age > 150 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *mt.Age, 150, false))
		}
	}
	return
}

// DataTableUserCollection is the media type for an array of DataTableUser (default view)
//
// Identifier: application/data.table.user; type=collection; view=default
type DataTableUserCollection []*DataTableUser

// Validate validates the DataTableUserCollection media type instance.
func (mt DataTableUserCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
